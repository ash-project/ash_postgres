defmodule AshPostgres.TestRepo.Migrations.MigrateResources65 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:food_categories, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:name, :text, null: false)
    end

    create table(:meal_items, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:food_item_id, :uuid, null: false)
    end

    create table(:user_excluded_categories, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:user_id, :uuid, null: false)

      add(
        :food_category_id,
        references(:food_categories,
          column: :id,
          name: "user_excluded_categories_food_category_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        null: false
      )
    end

    create table(:food_items, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    alter table(:meal_items) do
      modify(
        :food_item_id,
        references(:food_items,
          column: :id,
          name: "meal_items_food_item_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    alter table(:food_items) do
      add(:name, :text, null: false)

      add(
        :food_category_id,
        references(:food_categories,
          column: :id,
          name: "food_items_food_category_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        null: false
      )
    end
  end

  def down do
    drop(constraint(:food_items, "food_items_food_category_id_fkey"))

    alter table(:food_items) do
      remove(:food_category_id)
      remove(:name)
    end

    drop(constraint(:meal_items, "meal_items_food_item_id_fkey"))

    alter table(:meal_items) do
      modify(:food_item_id, :uuid)
    end

    drop(table(:food_items))

    drop(constraint(:user_excluded_categories, "user_excluded_categories_food_category_id_fkey"))

    drop(table(:user_excluded_categories))

    drop(table(:meal_items))

    drop(table(:food_categories))
  end
end
